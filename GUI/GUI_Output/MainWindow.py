#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.4 on Sun Nov 29 15:09:26 2020
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class mainWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: mainWindow.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((645, 518))
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Save Preset", "")
        self.Bind(wx.EVT_MENU, self.presetSave, id=item.GetId())
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Reset Defaults", "")
        self.Bind(wx.EVT_MENU, self.resetDefault, id=item.GetId())
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Save as Default", "")
        self.Bind(wx.EVT_MENU, self.saveDefault, id=item.GetId())
        self.frame_menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        self.frame_menubar.Append(wxglade_tmp_menu, "Edit")
        wxglade_tmp_menu = wx.Menu()
        self.frame_menubar.Append(wxglade_tmp_menu, "View")
        wxglade_tmp_menu = wx.Menu()
        self.frame_menubar.Append(wxglade_tmp_menu, "Help")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        self.panel_1 = wx.Panel(self, wx.ID_ANY, style=wx.BORDER_RAISED)
        self.panel_7 = wx.Panel(self.panel_1, wx.ID_ANY, style=wx.BORDER_SIMPLE)
        self.xnumberSlider = wx.Slider(self.panel_7, wx.ID_ANY, 2, 0, 10)
        self.xnumberSpinBox = wx.SpinCtrl(self.panel_7, wx.ID_ANY, "2", min=0, max=10)
        self.xspacingSlider = wx.Slider(self.panel_7, wx.ID_ANY, 150, 0, 500)
        self.xspacingSpinBox = wx.SpinCtrl(self.panel_7, wx.ID_ANY, "150", min=0, max=500)
        self.xwindowSelector = wx.ComboBox(self.panel_7, wx.ID_ANY, choices=["Square", "Chebyshev", "Taylor", "Hamming"], style=wx.CB_DROPDOWN)
        self.panel_8 = wx.Panel(self.panel_1, wx.ID_ANY, style=wx.BORDER_SIMPLE)
        self.ynumberSlider = wx.Slider(self.panel_8, wx.ID_ANY, 2, 0, 10)
        self.ynumberSpinBox = wx.SpinCtrl(self.panel_8, wx.ID_ANY, "2", min=0, max=10)
        self.yspacingSlider = wx.Slider(self.panel_8, wx.ID_ANY, 150, 0, 500)
        self.yspacingSpinBox = wx.SpinCtrl(self.panel_8, wx.ID_ANY, "150", min=0, max=500)
        self.ywindowSelector = wx.ComboBox(self.panel_8, wx.ID_ANY, choices=["Square", "Chebyshev", "Taylor", "Hamming"], style=wx.CB_DROPDOWN)
        self.arrayType = wx.Choice(self, wx.ID_ANY, choices=["Rectangular", "Linear"])
        self.panelButton = wx.Button(self, wx.ID_ANY, "Toggle Panels")
        self.graphButton = wx.Button(self, wx.ID_ANY, "Show Graph")
        self.panel_4 = wx.Panel(self, wx.ID_ANY, style=wx.BORDER_RAISED)
        self.aziSlider = wx.Slider(self.panel_4, wx.ID_ANY, 0, -90, 90)
        self.aziSpinBox = wx.SpinCtrl(self.panel_4, wx.ID_ANY, "0", min=-90, max=90)
        self.panel_5 = wx.Panel(self, wx.ID_ANY, style=wx.BORDER_RAISED)
        self.eleSlider = wx.Slider(self.panel_5, wx.ID_ANY, 0, -90, 90)
        self.eleSpinBox = wx.SpinCtrl(self.panel_5, wx.ID_ANY, "0", min=-90, max=90)
        self.graphCombo = wx.ComboBox(self, wx.ID_ANY, choices=["3D Surface", "2D Polar"], style=wx.CB_DROPDOWN)
        self.wilson = wx.Button(self, wx.ID_ANY, "Wave Configuration")
        self.quitButton = wx.Button(self, wx.ID_EXIT, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_SLIDER, self.xnumberSliderChanged, self.xnumberSlider)
        self.Bind(wx.EVT_SPINCTRL, self.xnumberSpinBoxChanged, self.xnumberSpinBox)
        self.Bind(wx.EVT_SLIDER, self.xspacingSliderChanged, self.xspacingSlider)
        self.Bind(wx.EVT_SPINCTRL, self.xspacingSpinBoxChanged, self.xspacingSpinBox)
        self.Bind(wx.EVT_COMBOBOX, self.xwindowChanged, self.xwindowSelector)
        self.Bind(wx.EVT_SLIDER, self.ynumberSliderChanged, self.ynumberSlider)
        self.Bind(wx.EVT_SPINCTRL, self.ynumberSpinBoxChanged, self.ynumberSpinBox)
        self.Bind(wx.EVT_SLIDER, self.yspacingSliderChanged, self.yspacingSlider)
        self.Bind(wx.EVT_SPINCTRL, self.yspacingSpinBoxChanged, self.yspacingSpinBox)
        self.Bind(wx.EVT_COMBOBOX, self.ywindowChanged, self.ywindowSelector)
        self.Bind(wx.EVT_CHOICE, self.arrayTypeChanged, self.arrayType)
        self.Bind(wx.EVT_BUTTON, self.panelButtonPressed, self.panelButton)
        self.Bind(wx.EVT_BUTTON, self.showGraph, self.graphButton)
        self.Bind(wx.EVT_SLIDER, self.aziSliderChanged, self.aziSlider)
        self.Bind(wx.EVT_SPINCTRL, self.aziSpinBoxChanged, self.aziSpinBox)
        self.Bind(wx.EVT_SLIDER, self.eleSliderChanged, self.eleSlider)
        self.Bind(wx.EVT_SPINCTRL, self.eleSpinBoxChanged, self.eleSpinBox)
        self.Bind(wx.EVT_COMBOBOX, self.graphComboSelect, self.graphCombo)
        self.Bind(wx.EVT_BUTTON, self.wilsonPressed, self.wilson)
        self.Bind(wx.EVT_BUTTON, self.quitPressed, self.quitButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: mainWindow.__set_properties
        self.SetTitle("Array Pattern Visualiser")
        self.xwindowSelector.SetSelection(0)
        self.ywindowSelector.SetSelection(0)
        self.arrayType.SetSelection(0)
        self.graphCombo.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: mainWindow.__do_layout
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_16 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_22 = wx.BoxSizer(wx.VERTICAL)
        sizer_23 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_20 = wx.BoxSizer(wx.VERTICAL)
        sizer_21 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_31 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_33 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_32 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_14 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_30 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_29 = wx.BoxSizer(wx.HORIZONTAL)
        label_2 = wx.StaticText(self.panel_1, wx.ID_ANY, "Array Configuaration")
        sizer_6.Add(label_2, 0, wx.ALIGN_CENTER, 0)
        label_12 = wx.StaticText(self.panel_7, wx.ID_ANY, "x - Array", style=wx.ALIGN_CENTER)
        sizer_14.Add(label_12, 0, wx.ALIGN_CENTER, 0)
        label_22 = wx.StaticText(self.panel_7, wx.ID_ANY, "Number of x Elements")
        sizer_14.Add(label_22, 0, wx.ALIGN_CENTER, 0)
        sizer_29.Add(self.xnumberSlider, 2, wx.EXPAND, 0)
        sizer_29.Add(self.xnumberSpinBox, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_14.Add(sizer_29, 1, wx.EXPAND, 0)
        label_23 = wx.StaticText(self.panel_7, wx.ID_ANY, "Spacing of x Elements\nin cms", style=wx.ALIGN_CENTER)
        sizer_14.Add(label_23, 0, wx.ALIGN_CENTER, 0)
        sizer_30.Add(self.xspacingSlider, 2, 0, 0)
        sizer_30.Add(self.xspacingSpinBox, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_14.Add(sizer_30, 1, wx.EXPAND, 0)
        sizer_7.Add((20, 20), 1, 0, 0)
        label_1 = wx.StaticText(self.panel_7, wx.ID_ANY, "Window")
        sizer_7.Add(label_1, 0, wx.ALIGN_CENTER | wx.ALL, 2)
        sizer_7.Add((20, 20), 0, 0, 0)
        sizer_7.Add(self.xwindowSelector, 0, wx.ALIGN_CENTER | wx.ALL, 1)
        sizer_7.Add((20, 20), 1, 0, 0)
        sizer_14.Add(sizer_7, 1, wx.EXPAND, 0)
        self.panel_7.SetSizer(sizer_14)
        sizer_6.Add(self.panel_7, 1, 0, 0)
        label_24 = wx.StaticText(self.panel_8, wx.ID_ANY, "y- Array", style=wx.ALIGN_CENTER)
        sizer_31.Add(label_24, 0, wx.ALIGN_CENTER | wx.ALL, 0)
        label_25 = wx.StaticText(self.panel_8, wx.ID_ANY, "Number of y Elements")
        sizer_31.Add(label_25, 0, wx.ALIGN_CENTER, 0)
        sizer_32.Add(self.ynumberSlider, 2, wx.EXPAND, 0)
        sizer_32.Add(self.ynumberSpinBox, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_31.Add(sizer_32, 1, wx.EXPAND, 0)
        label_26 = wx.StaticText(self.panel_8, wx.ID_ANY, "Spacing of y Elements\nin cms", style=wx.ALIGN_CENTER)
        sizer_31.Add(label_26, 0, wx.ALIGN_CENTER, 0)
        sizer_33.Add(self.yspacingSlider, 2, wx.EXPAND, 0)
        sizer_33.Add(self.yspacingSpinBox, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_31.Add(sizer_33, 1, wx.EXPAND, 0)
        sizer_8.Add((20, 20), 1, 0, 0)
        label_3 = wx.StaticText(self.panel_8, wx.ID_ANY, "Window")
        sizer_8.Add(label_3, 0, wx.ALIGN_CENTER | wx.ALL, 2)
        sizer_8.Add((20, 20), 0, 0, 0)
        sizer_8.Add(self.ywindowSelector, 0, wx.ALIGN_CENTER | wx.ALL, 1)
        sizer_8.Add((20, 20), 1, 0, 0)
        sizer_31.Add(sizer_8, 1, wx.EXPAND, 0)
        self.panel_8.SetSizer(sizer_31)
        sizer_6.Add(self.panel_8, 1, 0, 0)
        self.panel_1.SetSizer(sizer_6)
        sizer_4.Add(self.panel_1, 1, wx.ALL | wx.EXPAND, 4)
        sizer_2.Add(sizer_4, 1, wx.ALL, 2)
        sizer_3.Add(self.arrayType, 0, 0, 0)
        sizer_3.Add(self.panelButton, 0, wx.ALL, 2)
        sizer_3.Add(self.graphButton, 0, wx.ALL, 2)
        sizer_2.Add(sizer_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.RIGHT, 0)
        sizer_1.Add(sizer_2, 1, 0, 0)
        label_15 = wx.StaticText(self.panel_4, wx.ID_ANY, "Azimuth Angle", style=wx.ALIGN_CENTER)
        sizer_20.Add(label_15, 0, wx.ALIGN_CENTER, 0)
        sizer_21.Add(self.aziSlider, 2, 0, 0)
        sizer_21.Add(self.aziSpinBox, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_20.Add(sizer_21, 1, wx.EXPAND, 0)
        self.panel_4.SetSizer(sizer_20)
        sizer_9.Add(self.panel_4, 1, wx.ALL, 2)
        label_16 = wx.StaticText(self.panel_5, wx.ID_ANY, "Elevation Tilt")
        sizer_22.Add(label_16, 0, wx.ALIGN_CENTER, 0)
        sizer_23.Add(self.eleSlider, 2, 0, 0)
        sizer_23.Add(self.eleSpinBox, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_22.Add(sizer_23, 1, wx.EXPAND, 0)
        self.panel_5.SetSizer(sizer_22)
        sizer_9.Add(self.panel_5, 1, wx.ALL, 2)
        sizer_5.Add((20, 20), 1, 0, 0)
        label_4 = wx.StaticText(self, wx.ID_ANY, "Type of Plot: ", style=wx.ALIGN_CENTER)
        sizer_5.Add(label_4, 1, wx.ALIGN_CENTER, 0)
        sizer_5.Add(self.graphCombo, 2, wx.ALIGN_CENTER, 0)
        sizer_5.Add((20, 20), 1, 0, 0)
        sizer_9.Add(sizer_5, 1, wx.EXPAND, 0)
        sizer_9.Add((20, 20), 1, wx.EXPAND, 0)
        sizer_16.Add(self.wilson, 0, 0, 0)
        sizer_16.Add(self.quitButton, 0, 0, 0)
        sizer_9.Add(sizer_16, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_9, 1, 0, 0)
        sizer_1.Add((0, 0), 0, 0, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def presetSave(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'presetSave' not implemented!")
        event.Skip()

    def resetDefault(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'resetDefault' not implemented!")
        event.Skip()

    def saveDefault(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'saveDefault' not implemented!")
        event.Skip()

    def xnumberSliderChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'xnumberSliderChanged' not implemented!")
        event.Skip()

    def xnumberSpinBoxChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'xnumberSpinBoxChanged' not implemented!")
        event.Skip()

    def xspacingSliderChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'xspacingSliderChanged' not implemented!")
        event.Skip()

    def xspacingSpinBoxChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'xspacingSpinBoxChanged' not implemented!")
        event.Skip()

    def xwindowChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'xwindowChanged' not implemented!")
        event.Skip()

    def ynumberSliderChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'ynumberSliderChanged' not implemented!")
        event.Skip()

    def ynumberSpinBoxChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'ynumberSpinBoxChanged' not implemented!")
        event.Skip()

    def yspacingSliderChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'yspacingSliderChanged' not implemented!")
        event.Skip()

    def yspacingSpinBoxChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'yspacingSpinBoxChanged' not implemented!")
        event.Skip()

    def ywindowChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'ywindowChanged' not implemented!")
        event.Skip()

    def arrayTypeChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'arrayTypeChanged' not implemented!")
        event.Skip()

    def panelButtonPressed(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'panelButtonPressed' not implemented!")
        event.Skip()

    def showGraph(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'showGraph' not implemented!")
        event.Skip()

    def aziSliderChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'aziSliderChanged' not implemented!")
        event.Skip()

    def aziSpinBoxChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'aziSpinBoxChanged' not implemented!")
        event.Skip()

    def eleSliderChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'eleSliderChanged' not implemented!")
        event.Skip()

    def eleSpinBoxChanged(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'eleSpinBoxChanged' not implemented!")
        event.Skip()

    def graphComboSelect(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'graphComboSelect' not implemented!")
        event.Skip()

    def wilsonPressed(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'wilsonPressed' not implemented!")
        event.Skip()

    def quitPressed(self, event):  # wxGlade: mainWindow.<event_handler>
        print("Event handler 'quitPressed' not implemented!")
        event.Skip()

# end of class mainWindow

class MyApp(wx.App):
    def OnInit(self):
        self.mainFrame = mainWindow(None, wx.ID_ANY, "")
        self.SetTopWindow(self.mainFrame)
        self.mainFrame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
