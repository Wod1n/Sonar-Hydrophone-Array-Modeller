from ..GUI_Output import panelDialog
import wx

class panelDialogController(panelDialog):
    """
    A class which controls the panel dialog window GUI element

    Overloads the panelDialog class generated by wxGlade

    ...

    Attributes
    ----------

    grid_sizer_1 : wxgridsizer
        Grid which dynamically scales to the size of the array
        Contains checkboxes which toggle pannels on and off
    """

    def __init__(self, app, *args, **kwds):

        self.app = app

        super().__init__(*args, **kwds)

    def okPressed(self, event):
        """
        Closes the dialog and saves the selected working panels to the array
        """
        counterx = 0
        countery = 0
        counter = 0

        while countery < self.app.window.ynumber:
            while counterx < self.app.window.xnumber:
                if self.buttons[counter].GetValue():
                    self.app.window.failedPanels[counterx][countery] = 1
                if not self.buttons[counter].GetValue():
                    self.app.window.failedPanels[counterx][countery] = 0

                counter += 1
                counterx +=1

            counterx = 0
            countery += 1

        print(self.app.window.failedPanels)
        print("OK")
        self.Close()

    def configureSize(self):
        """
        Dynamically scales the dialog box to match the size of the array
        """

        print(self.app.window.failedPanels)
        self.grid_sizer_1.SetCols(self.app.window.xnumber)
        self.grid_sizer_1.SetRows(self.app.window.ynumber)
        self.grid_sizer_1.Clear()

        self.buttons = {}
        counterx = 0
        countery = 0
        counter = 0

        while countery < self.app.window.ynumber:
            while counterx < self.app.window.xnumber:
                self.buttons[counter] = wx.CheckBox(self, wx.ID_ANY, "")
                if self.app.window.failedPanels[counterx][countery] == 0:
                    self.buttons[counter].SetValue(False)
                if self.app.window.failedPanels[counterx][countery] == 1:
                    self.buttons[counter].SetValue(True)
                self.grid_sizer_1.Add(self.buttons[counter])

                counter += 1
                counterx +=1

            counterx = 0
            countery += 1

        self.Fit()
